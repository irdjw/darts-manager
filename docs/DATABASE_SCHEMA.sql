-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.DDP (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  player_id uuid NOT NULL,
  dart_number integer,
  dart_score integer NOT NULL CHECK (dart_score >= 0 AND dart_score <= 60),
  running_total integer NOT NULL CHECK (running_total >= 0 AND running_total <= 501),
  is_double_attempt boolean DEFAULT false,
  is_checkout_attempt boolean DEFAULT false,
  leg_won boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  checkout_successful boolean DEFAULT false,
  turn_number integer,
  dart_in_turn integer,
  CONSTRAINT DDP_pkey PRIMARY KEY (id),
  CONSTRAINT Dave's Darts Practice_player_id_fkey FOREIGN KEY (player_id) REFERENCES public.players(id)
);
CREATE TABLE public.Dstats (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  player_id uuid,
  player_name character varying NOT NULL,
  game_type character varying NOT NULL CHECK (game_type::text = ANY (ARRAY['league'::character varying, 'practice'::character varying]::text[])),
  game_session_id uuid,
  fixture_id uuid,
  game_date date NOT NULL,
  league_year character varying NOT NULL DEFAULT '2025-26'::character varying,
  opponent_type character varying NOT NULL CHECK (opponent_type::text = ANY (ARRAY['team'::character varying, 'player'::character varying]::text[])),
  opponent_name character varying NOT NULL,
  opponent_player_id uuid,
  game_won boolean NOT NULL,
  legs_played integer NOT NULL DEFAULT 1,
  legs_won integer NOT NULL DEFAULT 0,
  total_darts integer DEFAULT 0,
  total_points integer DEFAULT 0,
  scores_180 integer DEFAULT 0,
  scores_140_plus integer DEFAULT 0,
  scores_100_plus integer DEFAULT 0,
  scores_80_plus integer DEFAULT 0,
  double_attempts integer DEFAULT 0,
  double_hits integer DEFAULT 0,
  checkout_attempts integer DEFAULT 0,
  checkout_hits integer DEFAULT 0,
  highest_checkout integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT Dstats_pkey PRIMARY KEY (id),
  CONSTRAINT Dstats_player_id_fkey FOREIGN KEY (player_id) REFERENCES public.players(id),
  CONSTRAINT Dstats_fixture_id_fkey FOREIGN KEY (fixture_id) REFERENCES public.fixtures(id),
  CONSTRAINT Dstats_opponent_player_id_fkey FOREIGN KEY (opponent_player_id) REFERENCES public.players(id)
);
CREATE TABLE public.attendance (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  player_id uuid NOT NULL,
  league_year character varying,
  week_number integer NOT NULL,
  available boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT attendance_pkey PRIMARY KEY (id),
  CONSTRAINT attendance_player_fkey FOREIGN KEY (player_id) REFERENCES public.players(id)
);
CREATE TABLE public.custom_dart_tracking (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  custom_match_id uuid NOT NULL,
  leg_number integer NOT NULL,
  turn_number integer NOT NULL,
  dart_number integer NOT NULL CHECK (dart_number >= 1 AND dart_number <= 3),
  player_number integer NOT NULL CHECK (player_number = ANY (ARRAY[1, 2])),
  dart_score integer NOT NULL CHECK (dart_score >= 0 AND dart_score <= 180),
  multiplier integer DEFAULT 1 CHECK (multiplier = ANY (ARRAY[1, 2, 3])),
  segment integer CHECK (segment >= 1 AND segment <= 20 OR segment = 25),
  running_total integer NOT NULL,
  remaining_score integer NOT NULL,
  is_bust boolean DEFAULT false,
  is_checkout_attempt boolean DEFAULT false,
  checkout_successful boolean DEFAULT false,
  is_180 boolean DEFAULT false,
  thrown_at timestamp without time zone DEFAULT now(),
  CONSTRAINT custom_dart_tracking_pkey PRIMARY KEY (id),
  CONSTRAINT custom_dart_tracking_custom_match_id_fkey FOREIGN KEY (custom_match_id) REFERENCES public.custom_matches(id)
);
CREATE TABLE public.custom_game_statistics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  custom_match_id uuid NOT NULL,
  leg_number integer NOT NULL,
  player_number integer NOT NULL CHECK (player_number = ANY (ARRAY[1, 2])),
  leg_won boolean DEFAULT false,
  total_darts integer DEFAULT 0,
  three_dart_average numeric DEFAULT 0,
  highest_score integer DEFAULT 0,
  lowest_score integer DEFAULT 0,
  total_180s integer DEFAULT 0,
  scores_140_plus integer DEFAULT 0,
  scores_100_plus integer DEFAULT 0,
  scores_60_plus integer DEFAULT 0,
  checkout_attempts integer DEFAULT 0,
  checkout_hits integer DEFAULT 0,
  checkout_percentage numeric DEFAULT 0,
  highest_checkout integer DEFAULT 0,
  leg_duration_seconds integer,
  completed_at timestamp without time zone DEFAULT now(),
  CONSTRAINT custom_game_statistics_pkey PRIMARY KEY (id),
  CONSTRAINT custom_game_statistics_custom_match_id_fkey FOREIGN KEY (custom_match_id) REFERENCES public.custom_matches(id)
);
CREATE TABLE public.custom_matches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  match_type character varying NOT NULL CHECK (match_type::text = ANY (ARRAY['practice'::character varying, 'competitive'::character varying]::text[])),
  game_format integer NOT NULL DEFAULT 501,
  leg_format character varying NOT NULL CHECK (leg_format::text = ANY (ARRAY['single'::character varying, 'best_of_3'::character varying, 'best_of_5'::character varying, 'best_of_7'::character varying]::text[])),
  player1_id uuid,
  player1_name character varying NOT NULL,
  player1_is_guest boolean DEFAULT false,
  player2_id uuid,
  player2_name character varying NOT NULL,
  player2_is_guest boolean DEFAULT false,
  first_thrower integer CHECK (first_thrower = ANY (ARRAY[1, 2])),
  winner integer CHECK (winner = ANY (ARRAY[1, 2])),
  legs_won_player1 integer DEFAULT 0,
  legs_won_player2 integer DEFAULT 0,
  total_legs_played integer DEFAULT 0,
  match_date timestamp without time zone DEFAULT now(),
  completed boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT custom_matches_pkey PRIMARY KEY (id),
  CONSTRAINT custom_matches_player1_id_fkey FOREIGN KEY (player1_id) REFERENCES public.players(id),
  CONSTRAINT custom_matches_player2_id_fkey FOREIGN KEY (player2_id) REFERENCES public.players(id)
);

-- Indexes for performance
CREATE INDEX idx_custom_dart_tracking_match_leg ON custom_dart_tracking(custom_match_id, leg_number);
CREATE INDEX idx_custom_game_statistics_match ON custom_game_statistics(custom_match_id);
CREATE INDEX idx_custom_matches_date ON custom_matches(match_date DESC);
CREATE TABLE public.dart_tracking (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  league_game_id uuid NOT NULL,
  player_id uuid NOT NULL,
  dart_number integer,
  dart_score integer NOT NULL CHECK (dart_score >= 0 AND dart_score <= 60),
  running_total integer NOT NULL CHECK (running_total >= 0 AND running_total <= 501),
  is_double_attempt boolean DEFAULT false,
  is_checkout_attempt boolean DEFAULT false,
  leg_won boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  checkout_successful boolean DEFAULT false,
  turn_number integer,
  dart_in_turn integer,
  CONSTRAINT dart_tracking_pkey PRIMARY KEY (id),
  CONSTRAINT dart_tracking_player_fkey FOREIGN KEY (player_id) REFERENCES public.players(id),
  CONSTRAINT dart_tracking_game_fkey FOREIGN KEY (league_game_id) REFERENCES public.league_games(id)
);
CREATE TABLE public.fixtures (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  league_year text NOT NULL DEFAULT '2025/26'::text,
  week_number integer NOT NULL,
  match_date date NOT NULL,
  venue character varying NOT NULL CHECK (venue::text = ANY (ARRAY['home'::character varying, 'away'::character varying]::text[])),
  result text DEFAULT 'Still to play'::text CHECK (result = ANY (ARRAY['win'::character varying::text, 'loss'::character varying::text, 'to_play'::character varying::text])),
  created_at timestamp with time zone DEFAULT now(),
  opposition text,
  CONSTRAINT fixtures_pkey PRIMARY KEY (id)
);
CREATE TABLE public.game_statistics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  player_id uuid,
  player_name character varying NOT NULL,
  game_type character varying NOT NULL CHECK (game_type::text = ANY (ARRAY['league'::character varying, 'practice'::character varying]::text[])),
  game_session_id uuid,
  fixture_id uuid,
  game_date date NOT NULL,
  league_year character varying NOT NULL DEFAULT '2025-26'::character varying,
  opponent_type character varying NOT NULL CHECK (opponent_type::text = ANY (ARRAY['team'::character varying, 'player'::character varying]::text[])),
  opponent_name character varying NOT NULL,
  opponent_player_id uuid,
  game_won boolean NOT NULL,
  legs_played integer NOT NULL DEFAULT 1,
  legs_won integer NOT NULL DEFAULT 0,
  total_darts integer DEFAULT 0,
  total_points integer DEFAULT 0,
  scores_180 integer DEFAULT 0,
  scores_140_plus integer DEFAULT 0,
  scores_100_plus integer DEFAULT 0,
  scores_80_plus integer DEFAULT 0,
  double_attempts integer DEFAULT 0,
  double_hits integer DEFAULT 0,
  checkout_attempts integer DEFAULT 0,
  checkout_hits integer DEFAULT 0,
  highest_checkout integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT game_statistics_pkey PRIMARY KEY (id),
  CONSTRAINT game_statistics_opponent_player_id_fkey FOREIGN KEY (opponent_player_id) REFERENCES public.players(id),
  CONSTRAINT game_statistics_fixture_id_fkey FOREIGN KEY (fixture_id) REFERENCES public.fixtures(id),
  CONSTRAINT game_statistics_player_id_fkey FOREIGN KEY (player_id) REFERENCES public.players(id)
);
CREATE TABLE public.league_games (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  fixture_id uuid NOT NULL,
  game_number integer NOT NULL CHECK (game_number >= 1 AND game_number <= 7),
  our_player_id uuid NOT NULL,
  opponent_name character varying NOT NULL,
  result character varying NOT NULL CHECK (result::text = ANY (ARRAY['win'::character varying, 'loss'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT league_games_pkey PRIMARY KEY (id),
  CONSTRAINT league_games_player_fkey FOREIGN KEY (our_player_id) REFERENCES public.players(id),
  CONSTRAINT league_games_fixture_fkey FOREIGN KEY (fixture_id) REFERENCES public.fixtures(id)
);
CREATE TABLE public.player_stats (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  player_id uuid NOT NULL,
  league_year character varying NOT NULL,
  double_in_attempts integer DEFAULT 0,
  double_in_hits integer DEFAULT 0,
  double_in_percentage numeric DEFAULT 0.00,
  double_out_attempts integer DEFAULT 0,
  double_out_hits integer DEFAULT 0,
  double_out_percentage numeric DEFAULT 0.00,
  total_darts_thrown integer DEFAULT 0,
  total_points_scored integer DEFAULT 0,
  three_dart_average numeric DEFAULT 0.00,
  updated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT player_stats_pkey PRIMARY KEY (id),
  CONSTRAINT player_stats_player_fkey FOREIGN KEY (player_id) REFERENCES public.players(id)
);
CREATE TABLE public.players (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  weeks_attended integer DEFAULT 0,
  games_played integer DEFAULT 0,
  games_won integer DEFAULT 0,
  games_lost integer DEFAULT 0,
  last_game_week integer,
  created_at timestamp with time zone DEFAULT now(),
  total_darts integer DEFAULT 0,
  total_180s integer DEFAULT 0,
  win_percentage numeric DEFAULT 0.00,
  highest_checkout integer DEFAULT 0,
  checkout_attempts integer DEFAULT 0,
  checkout_hits integer DEFAULT 0,
  active boolean DEFAULT true,
  available boolean DEFAULT false,
  CONSTRAINT players_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  role character varying NOT NULL DEFAULT 'player'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (id),
  CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);